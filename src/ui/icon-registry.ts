import type { ComponentType } from "react";
import {
  IconActivity,
  IconAlertCircle,
  IconAlertTriangle,
  IconBell,
  IconCalendar,
  IconCamera,
  IconChartLine,
  IconChartPie,
  IconCheck,
  IconClock,
  IconDownload,
  IconEye,
  IconEyeOff,
  IconFilter,
  IconFlag,
  IconInfoCircle,
  IconLayoutCards,
  IconLayoutDashboard,
  IconLayoutGrid,
  IconLock,
  IconLockOpen,
  IconMail,
  IconMap,
  IconMapPin,
  IconMenu2,
  IconMinus,
  IconMoon,
  IconPin,
  IconPlayerPause,
  IconPlayerPlay,
  IconPlayerStop,
  IconPlus,
  IconRefresh,
  IconSearch,
  IconSettings,
  IconShield,
  IconShieldCheck,
  IconSparkles,
  IconSun,
  IconTarget,
  IconUpload,
  IconUser,
  IconUsers,
  IconWorld,
  IconX,
} from "@tabler/icons-react";
import {
  ChartBar,
  Gauge,
  Radar,
  SealCheck,
  ShieldCheckered,
} from "@phosphor-icons/react";
import {
  ChevronDownIcon,
  ChevronLeftIcon,
  ChevronRightIcon,
  ChevronUpIcon,
  DotsHorizontalIcon,
  DotsVerticalIcon,
  HamburgerMenuIcon,
} from "@radix-ui/react-icons";
import {
  Download as LucideDownload,
  Upload as LucideUpload,
  Globe2 as LucideGlobe2,
  Sparkle as LucideSparkle,
} from "lucide-react";

export type IconSource = "tabler" | "phosphor" | "radix" | "lucide";
export type IconWeight = "thin" | "light" | "regular" | "bold" | "fill" | "duotone";

export interface IconDefinition {
  source: IconSource;
  component: ComponentType<any>;
  defaultWeight?: IconWeight;
  defaultStroke?: number;
}

export const iconRegistry = {
  dashboard: { source: "tabler", component: IconLayoutDashboard },
  globe: { source: "tabler", component: IconWorld },
  "globe-2": { source: "lucide", component: LucideGlobe2 },
  search: { source: "tabler", component: IconSearch },
  "shield": { source: "tabler", component: IconShield },
  "shield-ok": { source: "tabler", component: IconShieldCheck },
  "shield-checkered": { source: "phosphor", component: ShieldCheckered, defaultWeight: "duotone" },
  alert: { source: "tabler", component: IconAlertTriangle },
  "alert-circle": { source: "tabler", component: IconAlertCircle },
  info: { source: "tabler", component: IconInfoCircle },
  radar: { source: "phosphor", component: Radar, defaultWeight: "duotone" },
  gauge: { source: "phosphor", component: Gauge, defaultWeight: "duotone" },
  upload: { source: "tabler", component: IconUpload },
  download: { source: "tabler", component: IconDownload },
  "upload-cloud": { source: "lucide", component: LucideUpload },
  "download-cloud": { source: "lucide", component: LucideDownload },
  filter: { source: "tabler", component: IconFilter },
  settings: { source: "tabler", component: IconSettings },
  user: { source: "tabler", component: IconUser },
  users: { source: "tabler", component: IconUsers },
  calendar: { source: "tabler", component: IconCalendar },
  clock: { source: "tabler", component: IconClock },
  map: { source: "tabler", component: IconMap },
  pin: { source: "tabler", component: IconMapPin },
  flag: { source: "tabler", component: IconFlag },
  bell: { source: "tabler", component: IconBell },
  mail: { source: "tabler", component: IconMail },
  play: { source: "tabler", component: IconPlayerPlay },
  pause: { source: "tabler", component: IconPlayerPause },
  stop: { source: "tabler", component: IconPlayerStop },
  refresh: { source: "tabler", component: IconRefresh },
  plus: { source: "tabler", component: IconPlus },
  minus: { source: "tabler", component: IconMinus },
  "chevron-down": { source: "radix", component: ChevronDownIcon },
  "chevron-right": { source: "radix", component: ChevronRightIcon },
  "chevron-left": { source: "radix", component: ChevronLeftIcon },
  "chevron-up": { source: "radix", component: ChevronUpIcon },
  menu: { source: "radix", component: HamburgerMenuIcon },
  x: { source: "tabler", component: IconX },
  check: { source: "tabler", component: IconCheck },
  "dots-horizontal": { source: "radix", component: DotsHorizontalIcon },
  "dots-vertical": { source: "radix", component: DotsVerticalIcon },
  "chart-bar": { source: "phosphor", component: ChartBar, defaultWeight: "duotone" },
  "chart-line": { source: "tabler", component: IconChartLine },
  "chart-pie": { source: "tabler", component: IconChartPie },
  activity: { source: "tabler", component: IconActivity },
  sun: { source: "tabler", component: IconSun },
  moon: { source: "tabler", component: IconMoon },
  "layout-grid": { source: "tabler", component: IconLayoutGrid },
  "layout-cards": { source: "tabler", component: IconLayoutCards },
  camera: { source: "tabler", component: IconCamera },
  eye: { source: "tabler", component: IconEye },
  "eye-off": { source: "tabler", component: IconEyeOff },
  target: { source: "tabler", component: IconTarget },
  sparkles: { source: "tabler", component: IconSparkles },
  "sparkles-alt": { source: "lucide", component: LucideSparkle },
  lock: { source: "tabler", component: IconLock },
  unlock: { source: "tabler", component: IconLockOpen },
  world: { source: "tabler", component: IconWorld },
  uploaders: { source: "phosphor", component: SealCheck, defaultWeight: "regular" },
  pointer: { source: "tabler", component: IconTarget },
  focus: { source: "tabler", component: IconTarget },
  cards: { source: "tabler", component: IconLayoutCards },
  list: { source: "tabler", component: IconMenu2 },
} as const satisfies Record<string, IconDefinition>;

export type KnownIconName = keyof typeof iconRegistry;

export function getIconDefinition(name: string): IconDefinition | undefined {
  return iconRegistry[name as KnownIconName];
}
